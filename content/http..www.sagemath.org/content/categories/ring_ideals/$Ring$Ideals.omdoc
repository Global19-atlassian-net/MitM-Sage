<omdoc xmlns="http://omdoc.org/ns" xmlns:om="http://www.openmath.org/OpenMath"><theory name="RingIdeals" base="http://www.sagemath.org/content/categories/ring_ideals" meta="http://www.sagemath.org/?Types"><import from="http://www.sagemath.org/?Axioms"></import><import from="http://www.sagemath.org/?Structures"></import><import from="http://www.sagemath.org/content/categories/modules?Modules"></import><constant name="sage.categories.ring_ideals.RingIdeals">
       
       <type><om:OMOBJ xmlns:om="http://www.openmath.org/OpenMath"><om:OMA>
              <om:OMS base="http://cds.omdoc.org/urtheories" module="LambdaPi" name="apply"></om:OMS>
              <om:OMS base="http://www.sagemath.org/" module="Types" name="structureof"></om:OMS><om:OMS base="http://www.sagemath.org/" module="Structures" name="sage.categories.ring_ideals.RingIdeals"></om:OMS>
      </om:OMA></om:OMOBJ></type>
       
       
     </constant><document name="Element Methods"><opaque format="text">
    The category of two-sided ideals in a fixed ring.

    EXAMPLES::

        sage: Ideals(Integers(200))
        Category of ring ideals in Ring of integers modulo 200
        sage: C = Ideals(IntegerRing()); C
        Category of ring ideals in Integer Ring
        sage: I = C([8,12,18])
        sage: I
        Principal ideal (2) of Integer Ring

    See also: :class:`CommutativeRingIdeals`.

    TODO:
     - If useful, implement RingLeftIdeals and RingRightIdeals
       of which RingIdeals would be a subcategory

     - Make RingIdeals(R), return CommutativeRingIdeals(R) when R is
       commutative
    </opaque></document><document name="Morphism Methods:"><opaque format="text">
    The category of two-sided ideals in a fixed ring.

    EXAMPLES::

        sage: Ideals(Integers(200))
        Category of ring ideals in Ring of integers modulo 200
        sage: C = Ideals(IntegerRing()); C
        Category of ring ideals in Integer Ring
        sage: I = C([8,12,18])
        sage: I
        Principal ideal (2) of Integer Ring

    See also: :class:`CommutativeRingIdeals`.

    TODO:
     - If useful, implement RingLeftIdeals and RingRightIdeals
       of which RingIdeals would be a subcategory

     - Make RingIdeals(R), return CommutativeRingIdeals(R) when R is
       commutative
    </opaque></document><document name="Parent Methods:"><opaque format="text">
    The category of two-sided ideals in a fixed ring.

    EXAMPLES::

        sage: Ideals(Integers(200))
        Category of ring ideals in Ring of integers modulo 200
        sage: C = Ideals(IntegerRing()); C
        Category of ring ideals in Integer Ring
        sage: I = C([8,12,18])
        sage: I
        Principal ideal (2) of Integer Ring

    See also: :class:`CommutativeRingIdeals`.

    TODO:
     - If useful, implement RingLeftIdeals and RingRightIdeals
       of which RingIdeals would be a subcategory

     - Make RingIdeals(R), return CommutativeRingIdeals(R) when R is
       commutative
    </opaque></document><document name="Subcategory Methods:"><opaque format="text">
    The category of two-sided ideals in a fixed ring.

    EXAMPLES::

        sage: Ideals(Integers(200))
        Category of ring ideals in Ring of integers modulo 200
        sage: C = Ideals(IntegerRing()); C
        Category of ring ideals in Integer Ring
        sage: I = C([8,12,18])
        sage: I
        Principal ideal (2) of Integer Ring

    See also: :class:`CommutativeRingIdeals`.

    TODO:
     - If useful, implement RingLeftIdeals and RingRightIdeals
       of which RingIdeals would be a subcategory

     - Make RingIdeals(R), return CommutativeRingIdeals(R) when R is
       commutative
    </opaque></document></theory></omdoc>