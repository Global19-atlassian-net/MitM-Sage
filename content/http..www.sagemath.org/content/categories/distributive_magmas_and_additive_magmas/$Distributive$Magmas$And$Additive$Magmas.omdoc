<omdoc xmlns="http://omdoc.org/ns" xmlns:om="http://www.openmath.org/OpenMath"><theory name="DistributiveMagmasAndAdditiveMagmas" base="http://www.sagemath.org/content/categories/distributive_magmas_and_additive_magmas" meta="http://www.sagemath.org/?Types"><import from="http://www.sagemath.org/?Axioms"></import><import from="http://www.sagemath.org/?Structures"></import><import from="http://www.sagemath.org/content/categories/magmas_and_additive_magmas?MagmasAndAdditiveMagmas"></import><constant name="Distributive">
       
       <type><om:OMOBJ xmlns:om="http://www.openmath.org/OpenMath"><om:OMA>
              <om:OMS base="http://cds.omdoc.org/urtheories" module="LambdaPi" name="apply"></om:OMS>
              <om:OMS base="http://www.sagemath.org/" module="Types" name="ded"></om:OMS><om:OMS base="http://www.sagemath.org/" module="Axioms" name="Distributive"></om:OMS>
      </om:OMA></om:OMOBJ></type>
       
       
     </constant><document name="Element Methods"><opaque format="text">
    The category of sets `(S,+,*)` with `*` distributing on `+`.

    This is similar to a ring, but `+` and `*` are only required to be
    (additive) magmas.

    EXAMPLES::

        sage: from sage.categories.distributive_magmas_and_additive_magmas import DistributiveMagmasAndAdditiveMagmas
        sage: C = DistributiveMagmasAndAdditiveMagmas(); C
        Category of distributive magmas and additive magmas
        sage: C.super_categories()
        [Category of magmas and additive magmas]

    TESTS::

        sage: from sage.categories.magmas_and_additive_magmas import MagmasAndAdditiveMagmas
        sage: C is MagmasAndAdditiveMagmas().Distributive()
        True
        sage: C is (Magmas() &amp; AdditiveMagmas()).Distributive()
        True
        sage: TestSuite(C).run()
    </opaque></document><document name="Morphism Methods:"><opaque format="text">
    The category of sets `(S,+,*)` with `*` distributing on `+`.

    This is similar to a ring, but `+` and `*` are only required to be
    (additive) magmas.

    EXAMPLES::

        sage: from sage.categories.distributive_magmas_and_additive_magmas import DistributiveMagmasAndAdditiveMagmas
        sage: C = DistributiveMagmasAndAdditiveMagmas(); C
        Category of distributive magmas and additive magmas
        sage: C.super_categories()
        [Category of magmas and additive magmas]

    TESTS::

        sage: from sage.categories.magmas_and_additive_magmas import MagmasAndAdditiveMagmas
        sage: C is MagmasAndAdditiveMagmas().Distributive()
        True
        sage: C is (Magmas() &amp; AdditiveMagmas()).Distributive()
        True
        sage: TestSuite(C).run()
    </opaque></document><document name="Parent Methods:"><constant name="parent._test_distributivity">
       
       <type><om:OMOBJ xmlns:om="http://www.openmath.org/OpenMath"><om:OMBIND>
                 <om:OMS base="http://cds.omdoc.org/urtheories" module="LambdaPi" name="Pi"></om:OMS>
                 <om:OMBVAR><om:OMV name="_"><type><om:OMS base="http://www.sagemath.org/" module="Types" name="object"></om:OMS></type></om:OMV></om:OMBVAR>
                 <om:OMS base="http://www.sagemath.org/" module="Types" name="object"></om:OMS>
      </om:OMBIND></om:OMOBJ></type>
       
       
     </constant><opaque format="text">
            Test the distributivity of `*` on `+` on (not necessarily
            all) elements of this set.

            INPUT:

            - ``options`` -- any keyword arguments accepted by :meth:`_tester`

            EXAMPLES:

            By default, this method runs the tests only on the
            elements returned by ``self.some_elements()``::

                sage: NN.some_elements()
                [0, 1, 3, 42]
                sage: NN._test_distributivity()

            However, the elements tested can be customized with the
            ``elements`` keyword argument::

                sage: CC._test_distributivity(elements=[CC(0),CC(1),CC(3),CC(I)])

            See the documentation for :class:`TestSuite` for more information.
            </opaque></document><document name="Subcategory Methods:"><opaque format="text">
    The category of sets `(S,+,*)` with `*` distributing on `+`.

    This is similar to a ring, but `+` and `*` are only required to be
    (additive) magmas.

    EXAMPLES::

        sage: from sage.categories.distributive_magmas_and_additive_magmas import DistributiveMagmasAndAdditiveMagmas
        sage: C = DistributiveMagmasAndAdditiveMagmas(); C
        Category of distributive magmas and additive magmas
        sage: C.super_categories()
        [Category of magmas and additive magmas]

    TESTS::

        sage: from sage.categories.magmas_and_additive_magmas import MagmasAndAdditiveMagmas
        sage: C is MagmasAndAdditiveMagmas().Distributive()
        True
        sage: C is (Magmas() &amp; AdditiveMagmas()).Distributive()
        True
        sage: TestSuite(C).run()
    </opaque></document></theory></omdoc>