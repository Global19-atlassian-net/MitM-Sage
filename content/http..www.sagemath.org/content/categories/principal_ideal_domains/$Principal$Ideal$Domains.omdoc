<omdoc xmlns="http://omdoc.org/ns" xmlns:om="http://www.openmath.org/OpenMath"><theory name="PrincipalIdealDomains" base="http://www.sagemath.org/content/categories/principal_ideal_domains" meta="http://www.sagemath.org/?Types"><import from="http://www.sagemath.org/?Axioms"></import><import from="http://www.sagemath.org/?Structures"></import><import from="http://www.sagemath.org/content/categories/unique_factorization_domains?UniqueFactorizationDomains"></import><document name="Element Methods"></document><document name="Morphism Methods:"><opaque format="text">
    The category of (constructive) principal ideal domains

    By constructive, we mean that a single generator can be
    constructively found for any ideal given by a finite set of
    generators. Note that this constructive definition only implies
    that finitely generated ideals are principal. It is not clear what
    we would mean by an infinitely generated ideal.

    EXAMPLES::

      sage: PrincipalIdealDomains()
      Category of principal ideal domains
      sage: PrincipalIdealDomains().super_categories()
      [Category of unique factorization domains]

    See also: http://en.wikipedia.org/wiki/Principal_ideal_domain

    TESTS::

        sage: TestSuite(PrincipalIdealDomains()).run()
    </opaque></document><document name="Parent Methods:"><constant name="parent._test_gcd_vs_xgcd">
       
       <type><om:OMOBJ xmlns:om="http://www.openmath.org/OpenMath"><om:OMBIND>
                 <om:OMS base="http://cds.omdoc.org/urtheories" module="LambdaPi" name="Pi"></om:OMS>
                 <om:OMBVAR><om:OMV name="_"><type><om:OMS base="http://www.sagemath.org/" module="Types" name="object"></om:OMS></type></om:OMV></om:OMBVAR>
                 <om:OMS base="http://www.sagemath.org/" module="Types" name="object"></om:OMS>
      </om:OMBIND></om:OMOBJ></type>
       
       
     </constant><opaque format="text">
            Check that gcd and xgcd are compatible if implemented.

            This test will prevent things like :trac:`17671` to happen again.

            TESTS::

                sage: ZZ._test_gcd_vs_xgcd()
                sage: QQ._test_gcd_vs_xgcd()
                sage: QQ['x']._test_gcd_vs_xgcd()
                sage: QQbar['x']._test_gcd_vs_xgcd()
                sage: RR._test_gcd_vs_xgcd()
                sage: RR['x']._test_gcd_vs_xgcd()

            A slightly more involved example of polynomial ring with a non UFD
            base ring::

                sage: K = QuadraticField(5)
                sage: O = K.maximal_order()
                sage: O in UniqueFactorizationDomains()
                False
                sage: R = PolynomialRing(O, 'x')
                sage: F = R.fraction_field()
                sage: F in PrincipalIdealDomains()
                True
                sage: F._test_gcd_vs_xgcd()
            </opaque></document><document name="Subcategory Methods:"></document></theory></omdoc>